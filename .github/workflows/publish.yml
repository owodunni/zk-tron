name: Publish

on:
  push:
    branches:
      - master
      - "releases/**"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs/
          key: poetry-cache-${{ env.PYTHON_VERSION }}-${{ hashFiles('packages/**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - name: Set up poetry
        run: |
          python -m pip install --upgrade poetry
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - run: npm ci
      - run: npm run build

      - name: "Version and publish" # Interesting step
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          if [ ${{ github.base_ref }} = master ]; then
            npx lerna version --conventional-commits --conventional-prerelease --preid beta --yes
          else
            npx lerna version --conventional-commits --conventional-graduate --create-release github --yes
          fi

          npx lerna publish from-git --no-verify-access --yes
